# Dremio MCP Server - Environment Configuration

# =============================================================================
# REQUIRED: Dremio Connection Settings
# =============================================================================

# Dremio server URL (including protocol)
# Examples:
#   - https://dremio.example.com
#   - http://localhost:9047
#   - https://cloud.dremio.com
DREMIO_URI=https://your-dremio-instance.com

# Dremio authentication credentials
# These should be for a user with appropriate permissions:
# - Catalog access (read metadata)
# - SQL execution (run queries)
# - API access (use REST endpoints)
DREMIO_USERNAME=your-username
DREMIO_PASSWORD=your-password

# =============================================================================
# OPTIONAL: Service Configuration
# =============================================================================

# Docker Compose project name (affects container names)
COMPOSE_PROJECT_NAME=dremio-mcp-docker

# Logging level for all services
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Port for MCP server (external access)
MCP_PORT=3000

# =============================================================================
# OPTIONAL: Token Refresh Configuration
# =============================================================================

# How often to check token expiration (in seconds)
# Default: 300 (5 minutes)
REFRESH_INTERVAL=300

# How many hours before expiry to refresh token
# Default: 6 (refresh when 6 hours remaining)
# Dremio tokens typically expire after ~30 hours
REFRESH_THRESHOLD=6

# Maximum number of retry attempts for token refresh
# Default: 3
REFRESH_MAX_RETRIES=3

# Delay between retry attempts (in seconds)
# Default: 60 (1 minute)
REFRESH_RETRY_DELAY=60

# =============================================================================
# OPTIONAL: Advanced Configuration
# =============================================================================

# Docker registry for custom builds (if needed)
# DOCKER_REGISTRY=your-registry.com

# Custom image tags (if building locally)
# MCP_IMAGE_TAG=latest
# REFRESHER_IMAGE_TAG=latest

# Resource limits (uncomment to enable)
# MCP_MEMORY_LIMIT=512m
# MCP_CPU_LIMIT=0.5
# REFRESHER_MEMORY_LIMIT=256m
# REFRESHER_CPU_LIMIT=0.25

# =============================================================================
# DEVELOPMENT ONLY: Debug and Testing
# =============================================================================

# Enable debug mode (more verbose logging)
# DEBUG=false

# Skip health checks during development
# DISABLE_HEALTH_CHECKS=false

# Use development token refresh intervals (faster refresh for testing)
# DEV_MODE=false

# =============================================================================
# MONITORING (Optional)
# =============================================================================

# Enable Prometheus metrics
# ENABLE_METRICS=false

# Prometheus metrics port
# METRICS_PORT=9090

# Enable Grafana dashboard
# ENABLE_GRAFANA=false

# Grafana port
# GRAFANA_PORT=3001

# =============================================================================
# SECURITY (Production)
# =============================================================================

# Use Docker secrets instead of environment variables (recommended for production)
# ENABLE_DOCKER_SECRETS=false

# Custom secrets file paths (when using Docker secrets)
# DREMIO_USERNAME_FILE=/run/secrets/dremio_username
# DREMIO_PASSWORD_FILE=/run/secrets/dremio_password

# TLS configuration (when using reverse proxy)
# ENABLE_TLS=false
# TLS_CERT_PATH=/etc/ssl/certs/server.crt
# TLS_KEY_PATH=/etc/ssl/private/server.key

# =============================================================================
# NOTES
# =============================================================================

# 1. Copy this file to .env and edit the required values
# 2. Never commit .env file to version control
# 3. For production, consider using Docker secrets for sensitive data
# 4. Ensure Dremio user has necessary permissions for MCP functionality
# 5. Check firewall settings for MCP_PORT accessibility
# 6. Monitor logs for token refresh and authentication issues

# Verification commands:
# - Check Dremio connectivity: curl -u username:password ${DREMIO_URI}/api/v3/catalog
# - Test token generation: curl -X POST ${DREMIO_URI}/apiv2/login -d '{"userName":"username","password":"password"}'
# - Verify MCP server: curl http://localhost:${MCP_PORT}/health
